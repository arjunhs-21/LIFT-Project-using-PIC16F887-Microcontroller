

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 19 11:28:31 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0009                     _PORTE	set	9
   209     0007                     _PORTC	set	7
   210     0006                     _PORTB	set	6
   211     0005                     _PORTA	set	5
   212     0008                     _PORTD	set	8
   213     003B                     _RC3	set	59
   214     0033                     _RB3	set	51
   215     003A                     _RC2	set	58
   216     0032                     _RB2	set	50
   217     0039                     _RC1	set	57
   218     0031                     _RB1	set	49
   219     002B                     _RA3	set	43
   220     002A                     _RA2	set	42
   221     0029                     _RA1	set	41
   222     0028                     _RA0	set	40
   223     0038                     _RC0	set	56
   224     003F                     _RC7	set	63
   225     003E                     _RC6	set	62
   226     0030                     _RB0	set	48
   227     0048                     _RE0	set	72
   228     0049                     _RE1	set	73
   229     0087                     _TRISC	set	135
   230     0086                     _TRISB	set	134
   231     0089                     _TRISE	set	137
   232     0088                     _TRISD	set	136
   233     0085                     _TRISA	set	133
   234     0189                     _ANSELH	set	393
   235     0188                     _ANSEL	set	392
   236                           
   237                           	psect	strings
   238     0003                     __pstrings:
   239     0003                     stringtab:
   240     0003                     __stringtab:
   241     0003                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244     0003                     stringdir:
   245     0003  3000               	movlw	high stringdir
   246     0004  008A               	movwf	10
   247     0005  0804               	movf	4,w
   248     0006  0A84               	incf	4,f
   249     0007  0782               	addwf	2,f
   250     0008                     __stringbase:
   251     0008  3400               	retlw	0
   252     0009                     __end_of__stringtab:
   253     0009                     STR_3:
   254     0009  3453               	retlw	83	;'S'
   255     000A  3445               	retlw	69	;'E'
   256     000B  3443               	retlw	67	;'C'
   257     000C  344F               	retlw	79	;'O'
   258     000D  344E               	retlw	78	;'N'
   259     000E  3444               	retlw	68	;'D'
   260     000F  3420               	retlw	32	;' '
   261     0010  3446               	retlw	70	;'F'
   262     0011  344C               	retlw	76	;'L'
   263     0012  344F               	retlw	79	;'O'
   264     0013  344F               	retlw	79	;'O'
   265     0014  3452               	retlw	82	;'R'
   266     0015  3400               	retlw	0
   267     0016                     STR_1:
   268     0016  3447               	retlw	71	;'G'
   269     0017  3452               	retlw	82	;'R'
   270     0018  344F               	retlw	79	;'O'
   271     0019  3455               	retlw	85	;'U'
   272     001A  344E               	retlw	78	;'N'
   273     001B  3444               	retlw	68	;'D'
   274     001C  3420               	retlw	32	;' '
   275     001D  3446               	retlw	70	;'F'
   276     001E  344C               	retlw	76	;'L'
   277     001F  344F               	retlw	79	;'O'
   278     0020  344F               	retlw	79	;'O'
   279     0021  3452               	retlw	82	;'R'
   280     0022  3400               	retlw	0
   281     0023                     STR_4:
   282     0023  3454               	retlw	84	;'T'
   283     0024  3448               	retlw	72	;'H'
   284     0025  3449               	retlw	73	;'I'
   285     0026  3452               	retlw	82	;'R'
   286     0027  3444               	retlw	68	;'D'
   287     0028  3420               	retlw	32	;' '
   288     0029  3446               	retlw	70	;'F'
   289     002A  344C               	retlw	76	;'L'
   290     002B  344F               	retlw	79	;'O'
   291     002C  344F               	retlw	79	;'O'
   292     002D  3452               	retlw	82	;'R'
   293     002E  3400               	retlw	0
   294     002F                     STR_2:
   295     002F  3446               	retlw	70	;'F'
   296     0030  3449               	retlw	73	;'I'
   297     0031  3452               	retlw	82	;'R'
   298     0032  3453               	retlw	83	;'S'
   299     0033  3454               	retlw	84	;'T'
   300     0034  3420               	retlw	32	;' '
   301     0035  3446               	retlw	70	;'F'
   302     0036  344C               	retlw	76	;'L'
   303     0037  344F               	retlw	79	;'O'
   304     0038  344F               	retlw	79	;'O'
   305     0039  3452               	retlw	82	;'R'
   306     003A  3400               	retlw	0
   307                           
   308                           	psect	cinit
   309     07FA                     start_initialization:	
   310                           ; #config settings
   311                           
   312     07FA                     __initialization:
   313                           
   314                           ; Clear objects allocated to COMMON
   315     07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   316     07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   317     07FC                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320     07FC                     __end_of__initialization:
   321     07FC  0183               	clrf	3
   322     07FD  120A  118A  2EA8   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325     0076                     __pbssCOMMON:
   326     0076                     _a:
   327     0076                     	ds	2
   328                           
   329                           	psect	cstackCOMMON
   330     0070                     __pcstackCOMMON:
   331     0070                     ?_delay:
   332     0070                     ?_enable:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_string:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     delay@A:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346     0070                     	ds	2
   347     0072                     ??_delay:
   348     0072                     ??_enable:	
   349                           ; 1 bytes @ 0x2
   350                           
   351     0072                     ?_lcd:	
   352                           ; 1 bytes @ 0x2
   353                           
   354     0072                     lcd@data:	
   355                           ; 1 bytes @ 0x2
   356                           
   357                           
   358                           ; 1 bytes @ 0x2
   359     0072                     	ds	1
   360     0073                     ??_lcd:
   361     0073                     lcd@rs:	
   362                           ; 1 bytes @ 0x3
   363                           
   364                           
   365                           ; 1 bytes @ 0x3
   366     0073                     	ds	1
   367     0074                     ??_string:
   368                           
   369                           ; 1 bytes @ 0x4
   370     0074                     	ds	1
   371     0075                     string@ptr:
   372                           
   373                           ; 1 bytes @ 0x5
   374     0075                     	ds	1
   375     0076                     ??_main:
   376                           
   377                           	psect	maintext
   378     06A8                     __pmaintext:	
   379                           ; 1 bytes @ 0x6
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 51 in file "LIFT.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels required when called: 4
   405 ;; This function calls:
   406 ;;		_lcd
   407 ;;		_string
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413     06A8                     _main:	
   414                           ;psect for function _main
   415                           
   416     06A8                     l888:	
   417                           ;incstack = 0
   418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   419                           
   420                           
   421                           ;LIFT.c: 53:     PORTA = PORTB = PORTC = PORTD = PORTE = 0X00;
   422     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   423     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   424     06AA  0189               	clrf	9	;volatile
   425     06AB  0188               	clrf	8	;volatile
   426     06AC  0187               	clrf	7	;volatile
   427     06AD  0186               	clrf	6	;volatile
   428     06AE  0185               	clrf	5	;volatile
   429                           
   430                           ;LIFT.c: 54:     TRISA = TRISD = TRISE = 0X00;
   431     06AF  1683               	bsf	3,5	;RP0=1, select bank1
   432     06B0  1303               	bcf	3,6	;RP1=0, select bank1
   433     06B1  0189               	clrf	9	;volatile
   434     06B2  0188               	clrf	8	;volatile
   435     06B3  0185               	clrf	5	;volatile
   436     06B4                     l890:
   437                           
   438                           ;LIFT.c: 55:     TRISB = TRISC=0X0F;
   439     06B4  300F               	movlw	15
   440     06B5  0087               	movwf	7	;volatile
   441     06B6  0086               	movwf	6	;volatile
   442     06B7                     l892:
   443                           
   444                           ;LIFT.c: 56:     ANSEL = ANSELH = 0X00;
   445     06B7  1683               	bsf	3,5	;RP0=1, select bank3
   446     06B8  1703               	bsf	3,6	;RP1=1, select bank3
   447     06B9  0189               	clrf	9	;volatile
   448     06BA  0188               	clrf	8	;volatile
   449     06BB                     l894:
   450                           
   451                           ;LIFT.c: 58:     lcd(0,0X38);
   452     06BB  3038               	movlw	56
   453     06BC  00F2               	movwf	lcd@data
   454     06BD  3000               	movlw	0
   455     06BE  120A  118A  265B  120A  118A  	fcall	_lcd
   456     06C3                     l896:
   457                           
   458                           ;LIFT.c: 59:     lcd(0,0X0E);
   459     06C3  300E               	movlw	14
   460     06C4  00F2               	movwf	lcd@data
   461     06C5  3000               	movlw	0
   462     06C6  120A  118A  265B  120A  118A  	fcall	_lcd
   463     06CB                     l898:
   464                           
   465                           ;LIFT.c: 60:     lcd(0,0X80);
   466     06CB  3080               	movlw	128
   467     06CC  00F2               	movwf	lcd@data
   468     06CD  3000               	movlw	0
   469     06CE  120A  118A  265B  120A  118A  	fcall	_lcd
   470     06D3                     l900:
   471                           
   472                           ;LIFT.c: 62:     {;LIFT.c: 63:         if(RB0==1)
   473     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   474     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   475     06D5  1C06               	btfss	6,0	;volatile
   476     06D6  2ED8               	goto	u371
   477     06D7  2ED9               	goto	u370
   478     06D8                     u371:
   479     06D8  2EFB               	goto	l82
   480     06D9                     u370:
   481     06D9                     l902:
   482                           
   483                           ;LIFT.c: 64:         {;LIFT.c: 65:             if(a==2)
   484     06D9  3002               	movlw	2
   485     06DA  0676               	xorwf	_a,w
   486     06DB  0477               	iorwf	_a+1,w
   487     06DC  1D03               	btfss	3,2
   488     06DD  2EDF               	goto	u381
   489     06DE  2EE0               	goto	u380
   490     06DF                     u381:
   491     06DF  2EE3               	goto	l906
   492     06E0                     u380:
   493     06E0                     l904:
   494                           
   495                           ;LIFT.c: 66:             {;LIFT.c: 67:                      RC6 = 1;
   496     06E0  1707               	bsf	7,6	;volatile
   497                           
   498                           ;LIFT.c: 68:                      RC7 = 0;
   499     06E1  1387               	bcf	7,7	;volatile
   500                           
   501                           ;LIFT.c: 69:             }
   502     06E2  2EF3               	goto	l914
   503     06E3                     l906:
   504     06E3  3003               	movlw	3
   505     06E4  0676               	xorwf	_a,w
   506     06E5  0477               	iorwf	_a+1,w
   507     06E6  1D03               	btfss	3,2
   508     06E7  2EE9               	goto	u391
   509     06E8  2EEA               	goto	u390
   510     06E9                     u391:
   511     06E9  2EEB               	goto	l910
   512     06EA                     u390:
   513     06EA  2EE0               	goto	l904
   514     06EB                     l910:
   515     06EB  3004               	movlw	4
   516     06EC  0676               	xorwf	_a,w
   517     06ED  0477               	iorwf	_a+1,w
   518     06EE  1D03               	btfss	3,2
   519     06EF  2EF1               	goto	u401
   520     06F0  2EF2               	goto	u400
   521     06F1                     u401:
   522     06F1  2EF3               	goto	l914
   523     06F2                     u400:
   524     06F2  2EE0               	goto	l904
   525     06F3                     l914:
   526                           
   527                           ;LIFT.c: 82:             a = 1;
   528     06F3  3001               	movlw	1
   529     06F4  00F6               	movwf	_a
   530     06F5  3000               	movlw	0
   531     06F6  00F7               	movwf	_a+1
   532     06F7                     l88:	
   533                           ;LIFT.c: 83:             while(RB0==1);
   534                           
   535     06F7  1806               	btfsc	6,0	;volatile
   536     06F8  2EFA               	goto	u411
   537     06F9  2EFB               	goto	u410
   538     06FA                     u411:
   539     06FA  2EF7               	goto	l88
   540     06FB                     u410:
   541     06FB                     l82:	
   542                           ;LIFT.c: 84:         }
   543                           
   544                           
   545                           ;LIFT.c: 85:         if((RC0==0)&&(a==1))
   546     06FB  1807               	btfsc	7,0	;volatile
   547     06FC  2EFE               	goto	u421
   548     06FD  2EFF               	goto	u420
   549     06FE                     u421:
   550     06FE  2F1B               	goto	l928
   551     06FF                     u420:
   552     06FF                     l916:
   553     06FF  0376               	decf	_a,w
   554     0700  0477               	iorwf	_a+1,w
   555     0701  1D03               	btfss	3,2
   556     0702  2F04               	goto	u431
   557     0703  2F05               	goto	u430
   558     0704                     u431:
   559     0704  2F1B               	goto	l928
   560     0705                     u430:
   561     0705                     l918:
   562                           
   563                           ;LIFT.c: 86:         {;LIFT.c: 87:                 RC6=0;
   564     0705  1307               	bcf	7,6	;volatile
   565                           
   566                           ;LIFT.c: 88:                 RC7=0;
   567     0706  1387               	bcf	7,7	;volatile
   568     0707                     l920:
   569                           
   570                           ;LIFT.c: 89:                 lcd(0,0X80);
   571     0707  3080               	movlw	128
   572     0708  00F2               	movwf	lcd@data
   573     0709  3000               	movlw	0
   574     070A  120A  118A  265B  120A  118A  	fcall	_lcd
   575     070F                     l922:
   576                           
   577                           ;LIFT.c: 90:                 RA0=1;
   578     070F  1283               	bcf	3,5	;RP0=0, select bank0
   579     0710  1303               	bcf	3,6	;RP1=0, select bank0
   580     0711  1405               	bsf	5,0	;volatile
   581     0712                     l924:
   582                           
   583                           ;LIFT.c: 91:                 RA1=RA2=RA3=0;
   584     0712  1185               	bcf	5,3	;volatile
   585     0713  1105               	bcf	5,2	;volatile
   586     0714  1085               	bcf	5,1	;volatile
   587     0715                     l926:
   588                           
   589                           ;LIFT.c: 92:                 string("GROUND FLOOR");
   590     0715  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   591     0716  120A  118A  2687  120A  118A  	fcall	_string
   592     071B                     l928:
   593                           
   594                           ;LIFT.c: 96:         if(RB1==1)
   595     071B  1283               	bcf	3,5	;RP0=0, select bank0
   596     071C  1303               	bcf	3,6	;RP1=0, select bank0
   597     071D  1C86               	btfss	6,1	;volatile
   598     071E  2F20               	goto	u441
   599     071F  2F21               	goto	u440
   600     0720                     u441:
   601     0720  2F44               	goto	l92
   602     0721                     u440:
   603     0721                     l930:
   604                           
   605                           ;LIFT.c: 97:         {;LIFT.c: 98:             if(a==1)
   606     0721  0376               	decf	_a,w
   607     0722  0477               	iorwf	_a+1,w
   608     0723  1D03               	btfss	3,2
   609     0724  2F26               	goto	u451
   610     0725  2F27               	goto	u450
   611     0726                     u451:
   612     0726  2F2A               	goto	l934
   613     0727                     u450:
   614     0727                     l932:
   615                           
   616                           ;LIFT.c: 99:             {;LIFT.c: 100:                      RC6 = 0;
   617     0727  1307               	bcf	7,6	;volatile
   618                           
   619                           ;LIFT.c: 101:                      RC7 = 1;
   620     0728  1787               	bsf	7,7	;volatile
   621                           
   622                           ;LIFT.c: 102:             }
   623     0729  2F3C               	goto	l942
   624     072A                     l934:
   625     072A  3003               	movlw	3
   626     072B  0676               	xorwf	_a,w
   627     072C  0477               	iorwf	_a+1,w
   628     072D  1D03               	btfss	3,2
   629     072E  2F30               	goto	u461
   630     072F  2F31               	goto	u460
   631     0730                     u461:
   632     0730  2F34               	goto	l938
   633     0731                     u460:
   634     0731                     l936:
   635                           
   636                           ;LIFT.c: 104:             {;LIFT.c: 105:                      RC6 = 1;
   637     0731  1707               	bsf	7,6	;volatile
   638                           
   639                           ;LIFT.c: 106:                      RC7 = 0;
   640     0732  1387               	bcf	7,7	;volatile
   641                           
   642                           ;LIFT.c: 107:             }
   643     0733  2F3C               	goto	l942
   644     0734                     l938:
   645     0734  3004               	movlw	4
   646     0735  0676               	xorwf	_a,w
   647     0736  0477               	iorwf	_a+1,w
   648     0737  1D03               	btfss	3,2
   649     0738  2F3A               	goto	u471
   650     0739  2F3B               	goto	u470
   651     073A                     u471:
   652     073A  2F3C               	goto	l942
   653     073B                     u470:
   654     073B  2F31               	goto	l936
   655     073C                     l942:
   656                           
   657                           ;LIFT.c: 113:             a=2;
   658     073C  3002               	movlw	2
   659     073D  00F6               	movwf	_a
   660     073E  3000               	movlw	0
   661     073F  00F7               	movwf	_a+1
   662     0740                     l98:	
   663                           ;LIFT.c: 116:             while(RB1==1);
   664                           
   665     0740  1886               	btfsc	6,1	;volatile
   666     0741  2F43               	goto	u481
   667     0742  2F44               	goto	u480
   668     0743                     u481:
   669     0743  2F40               	goto	l98
   670     0744                     u480:
   671     0744                     l92:	
   672                           ;LIFT.c: 117:         }
   673                           
   674                           
   675                           ;LIFT.c: 118:         if((RC1==0)&&(a==2))
   676     0744  1887               	btfsc	7,1	;volatile
   677     0745  2F47               	goto	u491
   678     0746  2F48               	goto	u490
   679     0747                     u491:
   680     0747  2F65               	goto	l956
   681     0748                     u490:
   682     0748                     l944:
   683     0748  3002               	movlw	2
   684     0749  0676               	xorwf	_a,w
   685     074A  0477               	iorwf	_a+1,w
   686     074B  1D03               	btfss	3,2
   687     074C  2F4E               	goto	u501
   688     074D  2F4F               	goto	u500
   689     074E                     u501:
   690     074E  2F65               	goto	l956
   691     074F                     u500:
   692     074F                     l946:
   693                           
   694                           ;LIFT.c: 119:         {;LIFT.c: 120:                 RC6=0;
   695     074F  1307               	bcf	7,6	;volatile
   696                           
   697                           ;LIFT.c: 121:                 RC7=0;
   698     0750  1387               	bcf	7,7	;volatile
   699     0751                     l948:
   700                           
   701                           ;LIFT.c: 122:                 lcd(0,0X80);
   702     0751  3080               	movlw	128
   703     0752  00F2               	movwf	lcd@data
   704     0753  3000               	movlw	0
   705     0754  120A  118A  265B  120A  118A  	fcall	_lcd
   706     0759                     l950:
   707                           
   708                           ;LIFT.c: 123:                 RA1=1;
   709     0759  1283               	bcf	3,5	;RP0=0, select bank0
   710     075A  1303               	bcf	3,6	;RP1=0, select bank0
   711     075B  1485               	bsf	5,1	;volatile
   712     075C                     l952:
   713                           
   714                           ;LIFT.c: 124:                 RA0=RA2=RA3=0;
   715     075C  1185               	bcf	5,3	;volatile
   716     075D  1105               	bcf	5,2	;volatile
   717     075E  1005               	bcf	5,0	;volatile
   718     075F                     l954:
   719                           
   720                           ;LIFT.c: 125:                 string("FIRST FLOOR");
   721     075F  3027               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   722     0760  120A  118A  2687  120A  118A  	fcall	_string
   723     0765                     l956:
   724                           
   725                           ;LIFT.c: 129:         if(RB2==1)
   726     0765  1283               	bcf	3,5	;RP0=0, select bank0
   727     0766  1303               	bcf	3,6	;RP1=0, select bank0
   728     0767  1D06               	btfss	6,2	;volatile
   729     0768  2F6A               	goto	u511
   730     0769  2F6B               	goto	u510
   731     076A                     u511:
   732     076A  2F8D               	goto	l102
   733     076B                     u510:
   734     076B                     l958:
   735                           
   736                           ;LIFT.c: 130:         {;LIFT.c: 131:           if(a==1)
   737     076B  0376               	decf	_a,w
   738     076C  0477               	iorwf	_a+1,w
   739     076D  1D03               	btfss	3,2
   740     076E  2F70               	goto	u521
   741     076F  2F71               	goto	u520
   742     0770                     u521:
   743     0770  2F74               	goto	l962
   744     0771                     u520:
   745     0771                     l960:
   746                           
   747                           ;LIFT.c: 132:             {;LIFT.c: 133:                      RC6 = 0;
   748     0771  1307               	bcf	7,6	;volatile
   749                           
   750                           ;LIFT.c: 134:                      RC7 = 1;
   751     0772  1787               	bsf	7,7	;volatile
   752                           
   753                           ;LIFT.c: 135:             }
   754     0773  2F85               	goto	l970
   755     0774                     l962:
   756     0774  3002               	movlw	2
   757     0775  0676               	xorwf	_a,w
   758     0776  0477               	iorwf	_a+1,w
   759     0777  1D03               	btfss	3,2
   760     0778  2F7A               	goto	u531
   761     0779  2F7B               	goto	u530
   762     077A                     u531:
   763     077A  2F7C               	goto	l966
   764     077B                     u530:
   765     077B  2F71               	goto	l960
   766     077C                     l966:
   767     077C  3004               	movlw	4
   768     077D  0676               	xorwf	_a,w
   769     077E  0477               	iorwf	_a+1,w
   770     077F  1D03               	btfss	3,2
   771     0780  2F82               	goto	u541
   772     0781  2F83               	goto	u540
   773     0782                     u541:
   774     0782  2F85               	goto	l970
   775     0783                     u540:
   776     0783                     l968:
   777                           
   778                           ;LIFT.c: 142:             {;LIFT.c: 143:                      RC6 = 1;
   779     0783  1707               	bsf	7,6	;volatile
   780                           
   781                           ;LIFT.c: 144:                      RC7 = 0;
   782     0784  1387               	bcf	7,7	;volatile
   783     0785                     l970:
   784                           
   785                           ;LIFT.c: 146:             a=3;
   786     0785  3003               	movlw	3
   787     0786  00F6               	movwf	_a
   788     0787  3000               	movlw	0
   789     0788  00F7               	movwf	_a+1
   790     0789                     l108:	
   791                           ;LIFT.c: 149:             while(RB2==1);
   792                           
   793     0789  1906               	btfsc	6,2	;volatile
   794     078A  2F8C               	goto	u551
   795     078B  2F8D               	goto	u550
   796     078C                     u551:
   797     078C  2F89               	goto	l108
   798     078D                     u550:
   799     078D                     l102:	
   800                           ;LIFT.c: 150:         }
   801                           
   802                           
   803                           ;LIFT.c: 151:         if((RC2==0)&&(a==3))
   804     078D  1907               	btfsc	7,2	;volatile
   805     078E  2F90               	goto	u561
   806     078F  2F91               	goto	u560
   807     0790                     u561:
   808     0790  2FAE               	goto	l984
   809     0791                     u560:
   810     0791                     l972:
   811     0791  3003               	movlw	3
   812     0792  0676               	xorwf	_a,w
   813     0793  0477               	iorwf	_a+1,w
   814     0794  1D03               	btfss	3,2
   815     0795  2F97               	goto	u571
   816     0796  2F98               	goto	u570
   817     0797                     u571:
   818     0797  2FAE               	goto	l984
   819     0798                     u570:
   820     0798                     l974:
   821                           
   822                           ;LIFT.c: 152:         {;LIFT.c: 153:                 RC6=0;
   823     0798  1307               	bcf	7,6	;volatile
   824                           
   825                           ;LIFT.c: 154:                 RC7=0;
   826     0799  1387               	bcf	7,7	;volatile
   827     079A                     l976:
   828                           
   829                           ;LIFT.c: 155:                 lcd(0,0X80);
   830     079A  3080               	movlw	128
   831     079B  00F2               	movwf	lcd@data
   832     079C  3000               	movlw	0
   833     079D  120A  118A  265B  120A  118A  	fcall	_lcd
   834     07A2                     l978:
   835                           
   836                           ;LIFT.c: 156:                 RA2=1;
   837     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   838     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   839     07A4  1505               	bsf	5,2	;volatile
   840     07A5                     l980:
   841                           
   842                           ;LIFT.c: 157:                 RA0=RA1=RA3=0;
   843     07A5  1185               	bcf	5,3	;volatile
   844     07A6  1085               	bcf	5,1	;volatile
   845     07A7  1005               	bcf	5,0	;volatile
   846     07A8                     l982:
   847                           
   848                           ;LIFT.c: 158:                 string("SECOND FLOOR");
   849     07A8  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   850     07A9  120A  118A  2687  120A  118A  	fcall	_string
   851     07AE                     l984:
   852                           
   853                           ;LIFT.c: 162:         if(RB3==1)
   854     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   855     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   856     07B0  1D86               	btfss	6,3	;volatile
   857     07B1  2FB3               	goto	u581
   858     07B2  2FB4               	goto	u580
   859     07B3                     u581:
   860     07B3  2FD5               	goto	l112
   861     07B4                     u580:
   862     07B4                     l986:
   863                           
   864                           ;LIFT.c: 163:         {;LIFT.c: 164:             if(a==1)
   865     07B4  0376               	decf	_a,w
   866     07B5  0477               	iorwf	_a+1,w
   867     07B6  1D03               	btfss	3,2
   868     07B7  2FB9               	goto	u591
   869     07B8  2FBA               	goto	u590
   870     07B9                     u591:
   871     07B9  2FBD               	goto	l990
   872     07BA                     u590:
   873     07BA                     l988:
   874                           
   875                           ;LIFT.c: 165:             {;LIFT.c: 166:                      RC6 = 0;
   876     07BA  1307               	bcf	7,6	;volatile
   877                           
   878                           ;LIFT.c: 167:                      RC7 = 1;
   879     07BB  1787               	bsf	7,7	;volatile
   880                           
   881                           ;LIFT.c: 168:             }
   882     07BC  2FCD               	goto	l998
   883     07BD                     l990:
   884     07BD  3002               	movlw	2
   885     07BE  0676               	xorwf	_a,w
   886     07BF  0477               	iorwf	_a+1,w
   887     07C0  1D03               	btfss	3,2
   888     07C1  2FC3               	goto	u601
   889     07C2  2FC4               	goto	u600
   890     07C3                     u601:
   891     07C3  2FC5               	goto	l994
   892     07C4                     u600:
   893     07C4  2FBA               	goto	l988
   894     07C5                     l994:
   895     07C5  3003               	movlw	3
   896     07C6  0676               	xorwf	_a,w
   897     07C7  0477               	iorwf	_a+1,w
   898     07C8  1D03               	btfss	3,2
   899     07C9  2FCB               	goto	u611
   900     07CA  2FCC               	goto	u610
   901     07CB                     u611:
   902     07CB  2FCD               	goto	l998
   903     07CC                     u610:
   904     07CC  2FBA               	goto	l988
   905     07CD                     l998:
   906                           
   907                           ;LIFT.c: 179:             a=4;
   908     07CD  3004               	movlw	4
   909     07CE  00F6               	movwf	_a
   910     07CF  3000               	movlw	0
   911     07D0  00F7               	movwf	_a+1
   912     07D1                     l118:	
   913                           ;LIFT.c: 180:             while(RB3==1);
   914                           
   915     07D1  1986               	btfsc	6,3	;volatile
   916     07D2  2FD4               	goto	u621
   917     07D3  2FD5               	goto	u620
   918     07D4                     u621:
   919     07D4  2FD1               	goto	l118
   920     07D5                     u620:
   921     07D5                     l112:	
   922                           ;LIFT.c: 181:         }
   923                           
   924                           
   925                           ;LIFT.c: 182:         if((RC3==0)&&(a==4))
   926     07D5  1987               	btfsc	7,3	;volatile
   927     07D6  2FD8               	goto	u631
   928     07D7  2FD9               	goto	u630
   929     07D8                     u631:
   930     07D8  2ED3               	goto	l900
   931     07D9                     u630:
   932     07D9                     l1000:
   933     07D9  3004               	movlw	4
   934     07DA  0676               	xorwf	_a,w
   935     07DB  0477               	iorwf	_a+1,w
   936     07DC  1D03               	btfss	3,2
   937     07DD  2FDF               	goto	u641
   938     07DE  2FE0               	goto	u640
   939     07DF                     u641:
   940     07DF  2ED3               	goto	l900
   941     07E0                     u640:
   942     07E0                     l1002:
   943                           
   944                           ;LIFT.c: 183:         {;LIFT.c: 184:                 RC6=0;
   945     07E0  1307               	bcf	7,6	;volatile
   946                           
   947                           ;LIFT.c: 185:                 RC7=0;
   948     07E1  1387               	bcf	7,7	;volatile
   949     07E2                     l1004:
   950                           
   951                           ;LIFT.c: 186:                 lcd(0,0X80);
   952     07E2  3080               	movlw	128
   953     07E3  00F2               	movwf	lcd@data
   954     07E4  3000               	movlw	0
   955     07E5  120A  118A  265B  120A  118A  	fcall	_lcd
   956     07EA                     l1006:
   957                           
   958                           ;LIFT.c: 187:                 RA3=1;
   959     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   960     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   961     07EC  1585               	bsf	5,3	;volatile
   962     07ED                     l1008:
   963                           
   964                           ;LIFT.c: 188:                 RA0=RA2=RA0=0;
   965     07ED  1005               	bcf	5,0	;volatile
   966     07EE  1105               	bcf	5,2	;volatile
   967     07EF  1005               	bcf	5,0	;volatile
   968     07F0                     l1010:
   969                           
   970                           ;LIFT.c: 189:                 string("THIRD FLOOR");
   971     07F0  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   972     07F1  120A  118A  2687  120A  118A  	fcall	_string
   973     07F6  2ED3               	goto	l900
   974     07F7  120A  118A  2800   	ljmp	start
   975     07FA                     __end_of_main:
   976                           
   977                           	psect	text1
   978     0687                     __ptext1:	
   979 ;; *************** function _string *****************
   980 ;; Defined at:
   981 ;;		line 44 in file "LIFT.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  ptr             1    wreg     PTR unsigned char 
   984 ;;		 -> STR_4(12), STR_3(13), STR_2(12), STR_1(13), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  ptr             1    5[COMMON] PTR unsigned char 
   987 ;;		 -> STR_4(12), STR_3(13), STR_2(12), STR_1(13), 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         1       0       0       0       0
   999 ;;      Temps:          1       0       0       0       0
  1000 ;;      Totals:         2       0       0       0       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 3
  1004 ;; This function calls:
  1005 ;;		_lcd
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     0687                     _string:	
  1012                           ;psect for function _string
  1013                           
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1017                           ;string@ptr stored from wreg
  1018     0687  00F5               	movwf	string@ptr
  1019     0688                     l880:
  1020                           
  1021                           ;LIFT.c: 44: void string(char *ptr);LIFT.c: 45: {;LIFT.c: 46:     while(*ptr)
  1022     0688  2E9B               	goto	l886
  1023     0689                     l882:
  1024                           
  1025                           ;LIFT.c: 47:     {;LIFT.c: 48:         lcd(1,*ptr++);
  1026     0689  0875               	movf	string@ptr,w
  1027     068A  0084               	movwf	4
  1028     068B  120A  118A  2003  120A  118A  	fcall	stringdir
  1029     0690  00F2               	movwf	lcd@data
  1030     0691  3001               	movlw	1
  1031     0692  120A  118A  265B  120A  118A  	fcall	_lcd
  1032     0697                     l884:
  1033     0697  3001               	movlw	1
  1034     0698  00F4               	movwf	??_string
  1035     0699  0874               	movf	??_string,w
  1036     069A  07F5               	addwf	string@ptr,f
  1037     069B                     l886:
  1038                           
  1039                           ;LIFT.c: 46:     while(*ptr)
  1040     069B  0875               	movf	string@ptr,w
  1041     069C  0084               	movwf	4
  1042     069D  120A  118A  2003  120A  118A  	fcall	stringdir
  1043     06A2  3A00               	xorlw	0
  1044     06A3  1D03               	skipz
  1045     06A4  2EA6               	goto	u361
  1046     06A5  2EA7               	goto	u360
  1047     06A6                     u361:
  1048     06A6  2E89               	goto	l882
  1049     06A7                     u360:
  1050     06A7                     l76:
  1051     06A7  0008               	return
  1052     06A8                     __end_of_string:
  1053                           
  1054                           	psect	text2
  1055     065B                     __ptext2:	
  1056 ;; *************** function _lcd *****************
  1057 ;; Defined at:
  1058 ;;		line 38 in file "LIFT.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  rs              1    wreg     unsigned char 
  1061 ;;  data            1    2[COMMON] unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  rs              1    3[COMMON] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         1       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0
  1076 ;;      Totals:         2       0       0       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 2
  1080 ;; This function calls:
  1081 ;;		_enable
  1082 ;; This function is called by:
  1083 ;;		_string
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088     065B                     _lcd:	
  1089                           ;psect for function _lcd
  1090                           
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
  1094                           ;lcd@rs stored from wreg
  1095     065B  00F3               	movwf	lcd@rs
  1096     065C                     l874:
  1097                           
  1098                           ;LIFT.c: 38: void lcd(char rs,char data);LIFT.c: 39: {;LIFT.c: 40:     RE0 = rs;
  1099     065C  1873               	btfsc	lcd@rs,0
  1100     065D  2E5F               	goto	u341
  1101     065E  2E63               	goto	u340
  1102     065F                     u341:
  1103     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1104     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1105     0661  1409               	bsf	9,0	;volatile
  1106     0662  2E66               	goto	u354
  1107     0663                     u340:
  1108     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0665  1009               	bcf	9,0	;volatile
  1111     0666                     u354:
  1112     0666                     l876:
  1113                           
  1114                           ;LIFT.c: 41:     PORTD = data;
  1115     0666  0872               	movf	lcd@data,w
  1116     0667  0088               	movwf	8	;volatile
  1117     0668                     l878:
  1118                           
  1119                           ;LIFT.c: 42:     enable();
  1120     0668  120A  118A  266E  120A  118A  	fcall	_enable
  1121     066D                     l70:
  1122     066D  0008               	return
  1123     066E                     __end_of_lcd:
  1124                           
  1125                           	psect	text3
  1126     066E                     __ptext3:	
  1127 ;; *************** function _enable *****************
  1128 ;; Defined at:
  1129 ;;		line 31 in file "LIFT.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 1
  1150 ;; This function calls:
  1151 ;;		_delay
  1152 ;; This function is called by:
  1153 ;;		_lcd
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157     066E                     _enable:	
  1158                           ;psect for function _enable
  1159                           
  1160     066E                     l868:	
  1161                           ;incstack = 0
  1162                           ; Regs used in _enable: [wreg+status,2+status,0+pclath+cstack]
  1163                           
  1164                           
  1165                           ;LIFT.c: 33:     RE1=1;
  1166     066E  1283               	bcf	3,5	;RP0=0, select bank0
  1167     066F  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0670  1489               	bsf	9,1	;volatile
  1169     0671                     l870:
  1170                           
  1171                           ;LIFT.c: 34:     delay(1000);
  1172     0671  30E8               	movlw	232
  1173     0672  00F0               	movwf	delay@A
  1174     0673  3003               	movlw	3
  1175     0674  00F1               	movwf	delay@A+1
  1176     0675  120A  118A  264C  120A  118A  	fcall	_delay
  1177     067A                     l872:
  1178                           
  1179                           ;LIFT.c: 35:     RE1=0;
  1180     067A  1283               	bcf	3,5	;RP0=0, select bank0
  1181     067B  1303               	bcf	3,6	;RP1=0, select bank0
  1182     067C  1089               	bcf	9,1	;volatile
  1183                           
  1184                           ;LIFT.c: 36:     delay(1000);
  1185     067D  30E8               	movlw	232
  1186     067E  00F0               	movwf	delay@A
  1187     067F  3003               	movlw	3
  1188     0680  00F1               	movwf	delay@A+1
  1189     0681  120A  118A  264C  120A  118A  	fcall	_delay
  1190     0686                     l67:
  1191     0686  0008               	return
  1192     0687                     __end_of_enable:
  1193                           
  1194                           	psect	text4
  1195     064C                     __ptext4:	
  1196 ;; *************** function _delay *****************
  1197 ;; Defined at:
  1198 ;;		line 27 in file "LIFT.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  A               2    0[COMMON] unsigned int 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         2       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_enable
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225     064C                     _delay:	
  1226                           ;psect for function _delay
  1227                           
  1228     064C                     l864:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _delay: [wreg+status,2+status,0]
  1231                           
  1232     064C                     l866:	
  1233                           ;LIFT.c: 27: void delay(unsigned int A);LIFT.c: 28: {;LIFT.c: 29:     while(A--);
  1234                           
  1235     064C  3001               	movlw	1
  1236     064D  02F0               	subwf	delay@A,f
  1237     064E  3000               	movlw	0
  1238     064F  1C03               	skipc
  1239     0650  03F1               	decf	delay@A+1,f
  1240     0651  02F1               	subwf	delay@A+1,f
  1241     0652  0A70               	incf	delay@A,w
  1242     0653  1D03               	skipz
  1243     0654  2E59               	goto	u331
  1244     0655  0A71               	incf	delay@A+1,w
  1245     0656  1D03               	btfss	3,2
  1246     0657  2E59               	goto	u331
  1247     0658  2E5A               	goto	u330
  1248     0659                     u331:
  1249     0659  2E4C               	goto	l866
  1250     065A                     u330:
  1251     065A                     l64:
  1252     065A  0008               	return
  1253     065B                     __end_of_delay:
  1254     007E                     btemp	set	126	;btemp
  1255     007E                     wtemp0	set	126
  1256                           
  1257                           	psect	idloc
  1258                           
  1259                           ;Config register IDLOC0 @ 0x2000
  1260                           ;	unspecified, using default values
  1261     2000                     	org	8192
  1262     2000  3FFF               	dw	16383
  1263                           
  1264                           ;Config register IDLOC1 @ 0x2001
  1265                           ;	unspecified, using default values
  1266     2001                     	org	8193
  1267     2001  3FFF               	dw	16383
  1268                           
  1269                           ;Config register IDLOC2 @ 0x2002
  1270                           ;	unspecified, using default values
  1271     2002                     	org	8194
  1272     2002  3FFF               	dw	16383
  1273                           
  1274                           ;Config register IDLOC3 @ 0x2003
  1275                           ;	unspecified, using default values
  1276     2003                     	org	8195
  1277     2003  3FFF               	dw	16383
  1278                           
  1279                           	psect	config
  1280                           
  1281                           ;Config register CONFIG1 @ 0x2007
  1282                           ;	Oscillator Selection bits
  1283                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1284                           ;	Watchdog Timer Enable bit
  1285                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1286                           ;	Power-up Timer Enable bit
  1287                           ;	PWRTE = ON, PWRT enabled
  1288                           ;	RE3/MCLR pin function select bit
  1289                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1290                           ;	Code Protection bit
  1291                           ;	CP = OFF, Program memory code protection is disabled
  1292                           ;	Data Code Protection bit
  1293                           ;	CPD = OFF, Data memory code protection is disabled
  1294                           ;	Brown Out Reset Selection bits
  1295                           ;	BOREN = OFF, BOR disabled
  1296                           ;	Internal External Switchover bit
  1297                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1298                           ;	Fail-Safe Clock Monitor Enabled bit
  1299                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1300                           ;	Low Voltage Programming Enable bit
  1301                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1302                           ;	In-Circuit Debugger Mode bit
  1303                           ;	DEBUG = 0x1, unprogrammed default
  1304     2007                     	org	8199
  1305     2007  2CE4               	dw	11492
  1306                           
  1307                           ;Config register CONFIG2 @ 0x2008
  1308                           ;	Brown-out Reset Selection bit
  1309                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1310                           ;	Flash Program Memory Self Write Enable bits
  1311                           ;	WRT = OFF, Write protection off
  1312     2008                     	org	8200
  1313     2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    string@ptr	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_string
    _string->_lcd
    _enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1829
                                _lcd
                             _string
 ---------------------------------------------------------------------------------
 (1) _string                                               2     2      0    1003
                                              4 COMMON     2     2      0
                                _lcd
 ---------------------------------------------------------------------------------
 (2) _lcd                                                  2     1      1     826
                                              2 COMMON     2     1      1
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               0     0      0     174
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd
     _enable
       _delay
   _string
     _lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 19 11:28:31 2025

                      _a 0076                        pc 0002                       l70 066D  
                     l64 065A                       l82 06FB                       l67 0686  
                     l76 06A7                       l92 0744                       l88 06F7  
                     l98 0740                       fsr 0004                      l102 078D  
                    l112 07D5                      l108 0789                      l118 07D1  
                    l900 06D3                      l910 06EB                      l902 06D9  
                    l920 0707                      l904 06E0                      l930 0721  
                    l922 070F                      l914 06F3                      l906 06E3  
                    l932 0727                      l924 0712                      l916 06FF  
                    l870 0671                      l950 0759                      l942 073C  
                    l934 072A                      l926 0715                      l918 0705  
                    l864 064C                      l872 067A                      l880 0688  
                    l960 0771                      l952 075C                      l944 0748  
                    l936 0731                      l928 071B                      l866 064C  
                    l874 065C                      l882 0689                      l970 0785  
                    l962 0774                      l954 075F                      l946 074F  
                    l938 0734                      l890 06B4                      l868 066E  
                    l876 0666                      l884 0697                      l980 07A5  
                    l972 0791                      l948 0751                      l956 0765  
                    l892 06B7                      l878 0668                      l886 069B  
                    l990 07BD                      l982 07A8                      l974 0798  
                    l966 077C                      l958 076B                      l894 06BB  
                    l976 079A                      l984 07AE                      l968 0783  
                    l896 06C3                      l888 06A8                      l994 07C5  
                    l986 07B4                      l978 07A2                      l898 06CB  
                    l988 07BA                      l998 07CD                      _RA0 0028  
                    _RA1 0029                      _RB0 0030                      _RA2 002A  
                    _RA3 002B                      _RB1 0031                      _RC0 0038  
                    _RB2 0032                      _RC1 0039                      _RB3 0033  
                    _RC2 003A                      _RC3 003B                      _RE0 0048  
                    _RE1 0049                      _RC6 003E                      _RC7 003F  
                    u400 06F2                      u401 06F1                      u330 065A  
                    u410 06FB                      u331 0659                      u411 06FA  
                    u340 0663                      u500 074F                      u420 06FF  
                    u341 065F                      u501 074E                      u421 06FE  
                    u510 076B                      u430 0705                      u511 076A  
                    u431 0704                      u360 06A7                      u600 07C4  
                    u520 0771                      u440 0721                      u361 06A6  
                    u601 07C3                      u521 0770                      u441 0720  
                    u354 0666                      u610 07CC                      u530 077B  
                    u450 0727                      u370 06D9                      u611 07CB  
                    u531 077A                      u451 0726                      u371 06D8  
                    u620 07D5                      u540 0783                      u460 0731  
                    u380 06E0                      u621 07D4                      u541 0782  
                    u461 0730                      u381 06DF                      u630 07D9  
                    u550 078D                      u470 073B                      u390 06EA  
                    u631 07D8                      u551 078C                      u471 073A  
                    u391 06E9                      u640 07E0                      u560 0791  
                    u480 0744                      u641 07DF                      u561 0790  
                    u481 0743                      u570 0798                      u490 0748  
                    u571 0797                      u491 0747                      u580 07B4  
                    u581 07B3                      u590 07BA                      u591 07B9  
                    _lcd 065B                      fsr0 0004                     l1000 07D9  
                   l1010 07F0                     l1002 07E0                     l1004 07E2  
                   l1006 07EA                     l1008 07ED                     ?_lcd 0072  
                   STR_1 0016                     STR_2 002F                     STR_3 0009  
                   STR_4 0023                     _main 06A8                     btemp 007E  
                   start 0000                    ??_lcd 0073                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _delay 064C  
                  lcd@rs 0073                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0076                   ?_delay 0070                   _ANSELH 0189  
                 _enable 066E                   delay@A 0070                   _string 0687  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 065B  
                ??_delay 0072               __pmaintext 06A8                  ?_enable 0070  
                ?_string 0070               __stringtab 0003                  __ptext1 0687  
                __ptext2 065B                  __ptext3 066E                  __ptext4 064C  
                lcd@data 0072     end_of_initialization 07FC           __end_of_enable 0687  
         __end_of_string 06A8      start_initialization 07FA              __end_of_lcd 066E  
               ??_enable 0072                 ??_string 0074              __pbssCOMMON 0076  
              ___latbits 0002                __pstrings 0003              __stringbase 0008  
     __end_of__stringtab 0009                string@ptr 0075                stringcode 0003  
               stringdir 0003                 stringtab 0003  
